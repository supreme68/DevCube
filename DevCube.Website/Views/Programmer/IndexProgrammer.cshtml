@model List<IndexProgrammerViewModel>

@{
    ViewBag.Title = "Programmers";
}

<!--Jumbotron-->
<div class="jumbotron">
    <h1>Dev-Cube<img src="~/Content/images/logo.png"></h1>
    <p class="lead">Dev-Cube is an application for simplifying employee managment by providing listing with all the avaible employees and their skills.</p>
    @Html.ActionLink("Skills", "IndexSkill", "Skill", null, new { @id = "button", @class = "btn btn-lg" })
    @Html.ActionLink("Get back", "IndexProgrammer", "Programmer", null, new { @id = "button", @class = "btn btn-lg" })
</div>

<!--Search Fields-->
@using (Html.BeginForm())
{
    <div id="search-form">
        <div class="form-group">
            <div class="container">
                <div class="row">
                    <div class="col-5">
                        <label for="search-form_input_name"><strong>Search by Name</strong></label>
                    </div>
                    <div class="col-7">
                        <input id="search-form_input_name" class="form-control" type="text" name="name" value="@ViewData["programmerNameSearchField"]" placeholder="Search..." />
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="container">
                <div class="row">
                    <div class="col-5">
                        <label for="search-form_input"><strong>Search by Skill</strong></label>
                    </div>
                    <div class="col-7">
                        <input id="search-form_input_ame" class="form-control" type="text" name="skillName" value="@ViewData["skillNameSearchField"]" placeholder="Search..." />
                    </div>
                </div>
            </div>
        </div>
        <input id="search-form_submitButton" class="btn btn-md" type="submit" />
    </div>
}

<!--Title-->
<h2>Programmers</h2>

<!--Create Link-->
<p>From here you can manage your programmers and their known skills</p>
@Html.ActionLink("Add New Programmer", "CreateProgrammer", null, new { @id = "button", @class = "btn btn-sm" })

<!--Table-->
<div class="table-responsive">
    <table class="table table-dark  table-hover">
        <thead class="thead-dark">
            @if (Model.Count != 0)
            {
                <tr>
                    <th>
                        First Name
                    </th>

                    <th>
                        Last Name
                    </th>

                    <th>
                        Skills
                    </th>

                    <th>
                        Manage
                    </th>

                </tr>
            }
            else
            {
                <div id="alert-container">
                    <div class="alert alert-danger"><strong>Hmmmm, seems we cant find what you are looking for, try typing something else in the search box</strong></div>
                </div>
            }
        </thead>

        @foreach (var item in Model)
        {
            int i = 0;
            <tr>

                <td>
                    @item.FirstName
                </td>

                <td>
                    @item.LastName
                </td>

                <td>
                    @if (item.Skills.Count == 0)
                    {
                        <span><strong>This "programmer" doesnt know any skill</strong></span>
                    }

                    @foreach (var skill in item.Skills)
                    {
                        i++;

                        string skillName = String.Concat(skill.Name, ", ");

                        if (i == item.Skills.Count)
                        {
                            skillName = skill.Name;
                        }

                        @skillName
                    }

                </td>

                <td>
                    @Html.ActionLink("Update", "UpdateProgrammer", new { id = item.ProgrammerID }) |
                    <a data-id="@item.ProgrammerID" class="delete-link" href="#" data-toggle="modal" data-target="#Modal">Delete</a>
                </td>

            </tr>
        }
    </table>
</div>

<!--Pagination-->
<nav aria-label="Page navigation example">
    <ul class="pagination">
        <li class="page-item"><a class="page-link" href="#">Previous</a></li>
        <li class="page-item"><a class="page-link" href="#">1</a></li>
        <li class="page-item"><a class="page-link" href="#">2</a></li>
        <li class="page-item"><a class="page-link" href="#">3</a></li>
        <li class="page-item"><a class="page-link" href="#">Next</a></li>
    </ul>
</nav>

<!--Modal-->
<div class="modal fade" id="Modal" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Woah There!</h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this programmer!
                @Html.Hidden("id", "", new { @class = "hidden-field" })
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">No</button>
                <button id="delete-button" class="btn btn-default">Yes</button>
            </div>
        </div>
    </div>
</div>

<!--Scripts-->
<script type="text/javascript">
    let Url = '@Url.Action("DeleteProgrammer", "Programmer")';
</script>

@Scripts.Render("~/Content/js/delete.js")
